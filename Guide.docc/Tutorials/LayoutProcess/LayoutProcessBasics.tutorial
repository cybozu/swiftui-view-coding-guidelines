@Article(time: 5) {
    @Intro(title: "Layoutプロセスの基礎") {
        SwiftUIのLayoutプロセスの基礎を学びます。
    }
    
    ## Overview
    
    SwiftUIのLayoutプロセスは以下のように行われます。
    1. 親Viewは子Viewへサイズを提案
    2. 子Viewは提案されたサイズをインプットにして自身のサイズを決定
    3. 親Viewは子Viewが決定したサイズをもとに配置
    4. SwiftUIはViewの角を最も近いピクセルに丸める
    
    このプロセスが繰り返し行われることで画面全体のViewツリーのサイズが決定されます。
    
    > WWDC19 Building Custom Views with SwiftUI [2:18~](https://developer.apple.com/videos/play/wwdc2019/237/?time=138)
    
    ## Layout Processes
    ### 親Viewは子Viewへサイズを提案
    親Viewは周囲の環境に応じて、子Viewに対してサイズを提案します。  
    例えばRootViewであれば、safe area全体のサイズを子Viewに提示します。
    
    ### 子Viewは提案されたサイズをインプットにして自身のサイズを決定
    提案されたサイズから、子Viewは自身のサイズを決定します。  
    
    この時、提案されたサイズと必ずしも一致しないことに注意が必要です。  
    Viewの種類によって、与えられたサイズに対してどこまで広がろうとするかが違います。  
    例えば`Color`は与えられたサイズ全体に広がろうとしますが、`Text`は文字の描画に必要なサイズに広がるのみです。
    
    ### 親Viewは子Viewが決定したサイズをもとに配置
    ここでは親Viewが子Viewの決定を変更することはありません。  
    例えば`Text`であれば提案したサイズよりも小さなサイズで決定されることは普通ですが、子Viewの決定を尊重して配置します。
    
    ### SwiftUIはViewの角を最も近いピクセルに丸める
    SwiftUIはViewの角を最も近いピクセルに丸めています。  
    これにより、アンチエイリアスの代わりに常に鮮明なエッジが得られます。
}
